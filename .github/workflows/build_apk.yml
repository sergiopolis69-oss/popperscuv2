name: build android apk

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.0'
          channel: stable
          cache: true

      - name: detect flutter project dir
        id: detect
        run: |
          set -e
          FOUND=$(git ls-files | grep -m1 '^.*pubspec\.yaml$' || true)
          if [ -z "$FOUND" ]; then
            echo "No pubspec.yaml found"; exit 1
          fi
          DIR=$(dirname "$FOUND")
          echo "PROJECT_DIR=$DIR" >> $GITHUB_ENV
          echo "Project dir: $DIR"

      - name: create clean shell app
        run: |
          flutter create shell_app --org com.popperscuv2.popperscuv2 --platforms=android

      - name: copy sources into shell
        run: |
          rsync -a "${PROJECT_DIR}/lib/" "shell_app/lib/"
          if [ -d "${PROJECT_DIR}/assets" ]; then rsync -a "${PROJECT_DIR}/assets/" "shell_app/assets/"; fi
          cp "${PROJECT_DIR}/pubspec.yaml" "shell_app/pubspec.yaml"

      - name: flutter pub get
        working-directory: shell_app
        run: flutter pub get

      - name: analyze (allow warnings)
        working-directory: shell_app
        run: flutter analyze || true

      - name: build release apk (verbose)
        working-directory: shell_app
        run: |
          set -o pipefail
          flutter build apk --release -v 2>&1 | tee build_verbose.log

      - name: upload build log on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build_verbose_log
          path: shell_app/build_verbose.log

      - name: upload apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: shell_app/build/app/outputs/flutter-apk/app-release.apk
