name: Android Debug APK (regen + NDK27)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Detect Flutter app directory
        run: |
          set -e
          APP_DIR="."
          for d in "." "shell_app" "app" "mobile" "client"; do
            if [ -f "$d/pubspec.yaml" ]; then APP_DIR="$d"; break; fi
          done
          echo "APP_DIR=$APP_DIR" >> $GITHUB_ENV
          echo "Detected APP_DIR=$APP_DIR"

      - name: Ensure Android cmdline-tools (sdkmanager)
        run: |
          set -e
          SDK="${ANDROID_SDK_ROOT:-/usr/local/lib/android/sdk}"
          SDKMAN="$SDK/cmdline-tools/latest/bin/sdkmanager"
          if [ ! -x "$SDKMAN" ]; then
            mkdir -p "$SDK/cmdline-tools"
            cd "$SDK/cmdline-tools"
            curl -sSLo cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
            unzip -q cmdline-tools.zip
            rm -f cmdline-tools.zip
            rm -rf latest
            mv cmdline-tools latest
            SDKMAN="$SDK/cmdline-tools/latest/bin/sdkmanager"
          fi
          "$SDKMAN" --version

      # 1) Regenera 'android/' con embedding v2 (soluciona el error de v1)
      - name: Regenerate Android project (v2 embedding)
        run: |
          set -e
          cd "$APP_DIR"
          rm -rf android
          flutter create --platforms=android .

      # 2) Instala/asegura NDK 27 y sincroniza todo a 27.x
      - name: Install & resolve NDK 27.x
        run: |
          set -e
          SDKMAN="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager"
          yes | "$SDKMAN" --licenses >/dev/null
          yes | "$SDKMAN" --install "ndk;27.0.12077973" || true
          NDK_ROOT="$ANDROID_SDK_ROOT/ndk"
          CAND=$(ls -1 "$NDK_ROOT" 2>/dev/null | grep '^27' | sort -V | tail -n1 || true)
          if [ -z "$CAND" ] || [ ! -f "$NDK_ROOT/$CAND/source.properties" ]; then
            CAND="27.0.12077973"
          fi
          echo "NDK_CAND=$CAND" >> $GITHUB_ENV
          echo "Using NDK: $NDK_ROOT/$CAND"

      - name: Write local.properties and gradle.properties
        run: |
          set -e
          APP_DIR="${APP_DIR:-.}"
          NDK_DIR="$ANDROID_SDK_ROOT/ndk/${NDK_CAND}"
          # local.properties
          LP="$APP_DIR/android/local.properties"
          mkdir -p "$APP_DIR/android"
          : > "$LP"
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> "$LP"
          echo "flutter.sdk=$(which flutter | xargs dirname | xargs dirname)" >> "$LP"
          echo "ndk.dir=$NDK_DIR" >> "$LP"
          echo "flutter.ndkVersion=${NDK_CAND}" >> "$LP"
          echo "--- local.properties ---"; cat "$LP"
          # gradle.properties del proyecto
          GP="$APP_DIR/android/gradle.properties"
          : > "$GP"
          echo "org.gradle.jvmargs=-Xmx4G -XX:MaxMetaspaceSize=1024m -XX:ReservedCodeCacheSize=512m -Dfile.encoding=UTF-8" >> "$GP"
          echo "android.useAndroidX=true" >> "$GP"
          echo "android.enableJetifier=true" >> "$GP"
          echo "android.ndkVersion=${NDK_CAND}" >> "$GP"
          echo "--- android/gradle.properties ---"; cat "$GP"
          # Gradle home limpio
          GH="$RUNNER_TEMP/.gradle"
          mkdir -p "$GH"
          echo "GRADLE_USER_HOME=$GH" >> $GITHUB_ENV
          : > "$GH/gradle.properties"
          echo "org.gradle.jvmargs=-Xmx4G -XX:MaxMetaspaceSize=1024m -XX:ReservedCodeCacheSize=512m -Dfile.encoding=UTF-8" >> "$GH/gradle.properties"

      - name: Flutter pub get
        run: |
          cd "$APP_DIR"
          flutter pub get

      - name: Build debug APK
        env:
          ORG_GRADLE_PROJECT_android_ndkVersion: ${{ env.NDK_CAND }}
          GRADLE_USER_HOME: ${{ env.GRADLE_USER_HOME }}
        run: |
          cd "$APP_DIR"
          echo "Building with android.ndkVersion=${ORG_GRADLE_PROJECT_android_ndkVersion}"
          flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APP_DIR }}/build/app/outputs/flutter-apk/app-debug.apk
          if-no-files-found: error
